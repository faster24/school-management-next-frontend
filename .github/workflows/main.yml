name: Deploy Next.js to AlmaLinux

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '20'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --only=production --legacy-peer-deps

      - name: Create .env file
        run: |
          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env

      - name: Build application
        run: npm run build

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r .next/ next.config.ts package.json package-lock.json public deployment/
          tar -czf deployment.tar.gz deployment/

      # âœ… Test SSH connection
      - name: Test SSH connection
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            echo "âœ… SSH connection successful"
            hostname
            date

      # âœ… Upload deployment package to the server
      - name: Upload deployment package
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          source: "deployment.tar.gz"
          target: "/tmp/"
          debug: true

      # âœ… Extract and restart app
      - name: Extract and restart on server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            echo "ðŸ“¦ Starting deployment on server..."
            cd /var/www/dashboard

            # Backup current deployment
            tar -czf backup_$(date +%Y%m%d_%H%M%S).tar.gz ./* 2>/dev/null || true

            # Extract new deployment
            tar -xzf /tmp/deployment.tar.gz -C /tmp/
            cp -r /tmp/deployment/* .
            rm -rf /tmp/deployment /tmp/deployment.tar.gz

            # Install production dependencies
            npm ci --only=production

            # Restart app via PM2
            pm2 restart all || pm2 start npm --name "next-dashboard" -- start

            # Cleanup old backups (keep 5 latest)
            ls -t backup_*.tar.gz 2>/dev/null | tail -n +6 | xargs rm -f

            echo "ðŸš€ Deployment completed successfully!"
